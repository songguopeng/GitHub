#include<iostream>
#include<algorithm>
#include<vector>
#include<iterator>
#include<functional>
#include<numeric>
#include<iomanip>
using namespace std;

//int main()
//{
//	vector<int>v(3);
//	for (int i = 1; i <= 3; i++)
//		v[i - 1] = i;
//	cout << "原始:" << endl;
//	copy(v.begin(), v.end(), ostream_iterator<int>(cout));
//	vector<int> mid(3);
//	partial_sum(v.begin(), v.end(), mid.begin(), multiplies<int>());//partial_sum求每个子项（1，1*2，1*2*3.....)的和,再accumulate计算出每个子项的累加和；
//	int sum = accumulate(mid.begin(), mid.end(),0);//后面的0是初始化result=0；
//	cout << sum << endl;
//	system("pause");
//	return 0;
//}
int main()
{
	vector<float> v(10);
	vector<int> vt;
	for (int i = 0; i <= 20; i++)
		vt.push_back(i);
	vector<int> rnt(21);
	adjacent_difference(vt.begin(), vt.end(), rnt.begin());
	cout << endl;
	copy(rnt.begin(), rnt.end(), ostream_iterator<int>(cout, "\t"));
	cout << endl;
		for (int i = 1; i <= 10; i++)
	{
		v.push_back((float)i / (i + 1));
		cout << (float)i / (i + 1) << '\t';
	}
	cout << endl;
	float sum = inner_product(v.begin(), v.end(), v.begin(), 0.0f);
	cout <<fixed<<setprecision(6)<< sum << endl;
	system("pause");
	return 0;
}