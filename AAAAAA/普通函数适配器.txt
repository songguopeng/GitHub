#include<iostream>
#include<algorithm>
#include<vector>
#include<string>
#include<iterator>
#include<functional>
using namespace std;
bool f(int x)
{
	return x > 3;
}

bool g(int x, int y)
{
	return x > y;
}
//通常情况下ptr_fun(function)对于一元函数不是必须的，ptr_fun(functional)对二元函数是必须的；
int main()
{
	int a[] = { 2,5,3,7,1,9,8,0,6 };
	int nSize = sizeof(a) / sizeof(int);
	sort(a, a + nSize);
	copy(a, a + nSize, ostream_iterator<int>(cout, "\t"));
	cout << endl;
	int nCount = count_if(a, a + nSize, f);
	cout << nCount << endl;
	nCount = count_if(a, a + nSize, ptr_fun(f));
	cout << nCount << endl;
	nCount = count_if(a, a + nSize, bind2nd(ptr_fun(g), 3));
	cout << nCount << endl;
	nCount = count_if(a, a + nSize, bind2nd(ptr_fun(g), 5));
	cout << nCount << endl;
	system("pause");
	return 0;
}