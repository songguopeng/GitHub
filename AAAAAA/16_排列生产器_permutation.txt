#include<iostream>
#include<iterator>
#include<vector>
#include<algorithm>
#include<functional>
using namespace std;

//int main()
//{
//	int A[] = { 2,3,4,5,6,1 };
//	const int n = sizeof(A) / sizeof(int);
//	cout << "原始:";
//	copy(A, A + n, ostream_iterator<int>(cout, "\t"));
//	cout << endl;
//	prev_permutation(A, A + n);
//	copy(A, A + n, ostream_iterator<int>(cout, "\t"));
//	cout << endl;
//	next_permutation(A, A + n);
//	copy(A, A + n, ostream_iterator<int>(cout, " "));
//	cout << endl;
//	sort(A, A + n);
//	//do
//	//{
//	//	copy(A, A + n, ostream_iterator<int>(cout, " "));
//	//	cout << endl;
//	//} while (next_permutation(A, A + n));//全排列;
//	system("pause");
//	return 0;
//}

int main()
{
	vector<int>vt;
	int t;
	while (cin >> t)
	{
		vt.push_back(t);
	}
	cout << "输入数据：" << endl;
	copy(vt.begin(), vt.end(), ostream_iterator<int>(cout, "\t"));
	cout << endl;
	sort(vt.begin(), vt.end());
	if (vt.at(0) == 0)//数字排序首字母不能为0；
	{
		auto it = upper_bound(vt.begin(), vt.end(), 0);
		swap(vt.at(0), *it);
	}
	do
	{
		copy(vt.begin(), vt.end(), ostream_iterator<int>(cout, "\t"));
		cout << endl;
	} while (next_permutation(vt.begin(), vt.end()));
	system("pause");
	return 0;
}