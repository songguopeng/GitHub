#include<iostream>
#include<algorithm>
#include<string>
#include<iterator>
#include<functional>
#include<vector>
using namespace std;

class Student
{
public:
	int NO;
	string name;
	int grade;

	Student(int NO,string name,int grade) {
		this->NO = NO;
		this->name = name;
		this->grade = grade;
	}
	bool operator>(const Student &s)const
	{
		return grade > s.grade;
	}

};
ostream &operator <<(ostream &os, const Student &s)
{
	os << s.NO << "\t" << s.name << "\t" << s.grade << endl;
	return os;
}

int main()
{
	Student s1(101, "张三", 90);
	Student s2(102, "李四", 23);
	Student s3(103, "王五", 34);
	Student s4(104, "赵六", 45);
	Student s5(105, "苏七", 56);
	Student s6(106, "黑八", 96);
	vector<Student>vt;
	vt.push_back(s1);
	vt.push_back(s2);
	vt.push_back(s3);
	vt.push_back(s4);
	vt.push_back(s5);
	vt.push_back(s6);
	copy(vt.begin(), vt.end(), ostream_iterator<Student>(cout));
	cout << endl;
	nth_element(vt.begin(), vt.begin() + 2, vt.end(), greater<Student>());
	copy(vt.begin(), vt.end(), ostream_iterator<Student>(cout));
	cout << endl;
	vector<Student>::iterator it = vt.begin() + 2;
	cout << it->NO << "\t" << it->name << "\t" << it->grade << endl;
	system("pause");
	return 0;
}