#include<iostream>
#include<algorithm>
#include<list>
#include<iterator>

using namespace std;

int main()
{
	int a[] = { 1,2,2,3,3,3,4,4,4,4 };
	list<int>ll(a, a + sizeof(a) / sizeof(int));
	cout << "原始数据：";
	copy(ll.begin(), ll.end(), ostream_iterator<int>(cout, "\t"));
	cout << endl;
	bool bExist = binary_search(ll.begin(), ll.end(), 5);
	cout << "有元素5吗？" << (bExist == false ? "false" : "true") << endl;
	list<int>::iterator first2 = lower_bound(ll.begin(), ll.end(), 2);
	if (first2 != ll.end())
	{
		cout << "第一个元素2的位置:" << distance(ll.begin(),first2) << endl;
	}
	list<int>::iterator last3 = upper_bound(ll.begin(), ll.end(), 3);
	if (last3 != ll.end())
	{
		cout << "最后一个3的位置为:" << distance(ll.begin(), --last3) << endl;
	}
	pair<list<int>::iterator, list<int>::iterator>p = equal_range(ll.begin(), ll.end(), 4);
	if (p.first != p.second)
	{
		cout << "共有元素4个数：" << distance(p.first, p.second) << endl;
	}
	getchar();
	return 0;
}